
import java.io.PrintWriter;
import java.io.StringWriter;

public class Error extends javax.swing.JFrame {

    StringWriter stringWriter = new StringWriter();
    PrintWriter writer = new PrintWriter(stringWriter, true);

    /**
     * Creates new form AddEmp
     *
     * @param error
     */
    public Error(boolean error[]) {
        initComponents();
        setDefaultCloseOperation(Error.DISPOSE_ON_CLOSE);
        String text[] = new String[0];

        errorMessage.setText("");

        if (error[0]) {
            errorMessage.setText(errorMessage.getText() + "<br>Invalid employee number. It must be a non-negative integer.");
        }

        if (error[1]) {
            errorMessage.setText(errorMessage.getText() + "<br>Employee number not in use.");
        }

        if (error[2]) {
            errorMessage.setText(errorMessage.getText() + "<br>Employee number already in use.");
        }

        if (error[3]) {
            errorMessage.setText(errorMessage.getText() + "<br>Enter first name.");
        } else if (error[12]) {
            errorMessage.setText(errorMessage.getText() + "<br>First name cannot contain spaces.");
        }

        if (error[4]) {
            errorMessage.setText(errorMessage.getText() + "<br>Enter last name.");
        } else if (error[13]) {
            errorMessage.setText(errorMessage.getText() + "<br>Last name cannot contain spaces.");
        }

        if (error[5]) {
            errorMessage.setText(errorMessage.getText() + "<br>Choose work location.");
        }

        if (error[6]) {
            errorMessage.setText(errorMessage.getText() + "<br>Deductions rate is invalid. It must be a number from 0 to 1.");
        }

        if (error[7]) {
            errorMessage.setText(errorMessage.getText() + "<br>Choose employee type.");
        }

        if (error[8]) {
            errorMessage.setText(errorMessage.getText() + "<br>Annual salary is invalid. It must be a non-negative number.");
        }

        if (error[9]) {
            errorMessage.setText(errorMessage.getText() + "<br>Hourly wage is invalid. It must be a non-negative number.");
        }

        if (error[10]) {
            errorMessage.setText(errorMessage.getText() + "<br>Hours per week is invalid. It must be a non-negative number.");
        }

        if (error[11]) {
            errorMessage.setText(errorMessage.getText() + "<br>Weeks per year is invalid. It must be a non-negative number.");
        }

        errorMessage.setText("<html>" + errorMessage.getText() + "</html>");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errorLabel = new javax.swing.JLabel();
        errorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        errorLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        errorLabel.setText("ERROR");

        errorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(errorLabel)
                .addContainerGap(183, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Error.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Error.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Error.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Error.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Error().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel errorMessage;
    // End of variables declaration//GEN-END:variables
}
